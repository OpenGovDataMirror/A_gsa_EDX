---
import WebsiteChart from "../../components/WebsiteChart.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import chartData from "../../../public/data/websites.json";
const cssClass = "";
---

<BaseLayout title="Charts">
  <style is:global lang="scss">
    @import "../../styles/website_charts.scss";
  </style>


  <div id="websites" class="website-chart">
    <div class="grid-row margin-bottom-2">
      <section aria-label="Big search component">
        <label class="usa-sr-only" for="search-field-en-big"> Search</label>
        <input
          class="usa-input search"
          id="search-field-en-big"
          type="search"
          name="search"
          placeholder="Search e.g. 'FAS', 'Application', 'Leasing'"
          style="border-right: 1px solid #565c65; width: 450px"
        />
      </section>
    </div>
    <p><a href="website-list">View as a table</a></p>
    <div class="grid-col-12 margin-bottom-2">
      <div
        class="usa-accordion usa-accordion--bordered usa-accordion--multiselectable"
      >
        <h4 class="usa-accordion__heading">
          <button
            class="usa-accordion__button"
            aria-expanded="false"
            aria-controls="a1"
          >
            Search Guide
          </button>
        </h4>
        <div id="a1" class="usa-accordion__content usa-prose">
          <p>
            Search looks across various attributes associated with a given
            website such as office, sub-office, website type, and URL. Example
            searches include:
          </p>
          <ul>
            <li>TTS Informational</li>
            <li>Application Login</li>
            <li>Real Property Utilization & Disposal</li>
            <li>FAS CASE</li>
          </ul>
        </div>
        <h4 class="usa-accordion__heading">
          <button
            class="usa-accordion__button"
            aria-expanded="false"
            aria-controls="a2"
          >
            Terminology
          </button>
        </h4>
        <div id="a2" class="usa-accordion__content usa-prose">
          <ul>
            <li>Digital Brand Category</li>
            <ul>
              <li>
                <strong>GSA Business</strong> - Site provides information and services
                about GSA products, services or policies, and/or engages stakeholders
                with the GSA brand. GSA operates the site. Site displays the GSA
                Star Mark.
              </li>
              <li>
                <strong>Hybrid</strong> - Site is for collaboration, engagement,
                or information-sharing, NOT necessarily focused on GSA-only business.
                GSA operates the site. Site displays the GSA Star Mark.
              </li>
              <li>
                <strong>External</strong> - GSA manages domain registration, but
                the website has no other affiliation with GSA, and does NOT display
                the GSA Star Mark.
              </li>
            </ul>
            <li>Office / Sub-Office</li>
            <ul>
              <li>
                We try to use the common terms or correspondence symbols for
                offices across GSA. For example: "Office of Leasing", "TTS/PIF",
                "OGP MV", etc
              </li>
            </ul>
            <li>Website Type</li>
            <ul>
              <li>
                <strong>API</strong> - Application Programming Interface; typically
                includes “api” in the domain name
              </li>
              <li>
                <strong>Critical infrastructure</strong> - Required to support a
                GSA or shared service
              </li>
              <li>
                <strong>GitHub repo</strong> - Site decommissioned; URL redirects
                to a GitHub repo (status is redirect)
              </li>
              <li>
                <strong>Google form</strong> - Site redirects to a Google form (status
                is redirect)
              </li>
              <li>
                <strong>Informational</strong> - Informational (not transactional)
                site; all content is public-facing, no login required
              </li>
              <li>
                <strong>Login</strong> - Login page to a back-end app or system;
                all content (other than guidance on how to log in) is only accessible
                after user login
              </li>
              <li>
                <strong>Transactional</strong> - Web application/back-end system
                with at least one page of public-facing informational content; collects
                data via user input; users must log in to access additional content,
                features, and/or functionality
              </li>
            </ul>
          </ul>
        </div>
        <h4 class="usa-accordion__heading">
          <button
            class="usa-accordion__button"
            aria-expanded="true"
            aria-controls="a3"
          >
            Legend
          </button>
        </h4>
        <div id="a3" class="usa-accordion__content usa-prose">
          <p>
            The following charts show the relative strengths and weaknesses of
            each website across 6 areas. Click on a domain name to view
            additional data and stats.
          </p>
          <p>
            A gray semi-circle appears when data is unavailable for the website
            in that particular category.
          </p>
          <div class="grid-row">
            <div class="grid-col-12 tablet:grid-col-4 margin-bottom-105">
              <span class={`legend one ${cssClass}`}></span>Customer Centricity
            </div>
            <div class="grid-col-12 tablet:grid-col-4 margin-bottom-105">
              <span class={`legend two ${cssClass}`}></span>Required Links
            </div>
            <div class="grid-col-12 tablet:grid-col-4 margin-bottom-105">
              <span class={`legend three ${cssClass}`}></span>Mobile Performance
            </div>
            <div class="grid-col-12 tablet:grid-col-4 margin-bottom-105">
              <span class={`legend four ${cssClass}`}></span>Accessibility (AMP)
            </div>
            <div class="grid-col-12 tablet:grid-col-4 margin-bottom-105">
              <span class={`legend five ${cssClass}`}></span>Google Analytics
            </div>
            <div class="grid-col-12 tablet:grid-col-4 margin-bottom-105">
              <span class={`legend six ${cssClass}`}></span>USWDS
            </div>
          </div>
        </div>
      </div>
    </div>
    <div style="height: 40rem" class="overflow-scroll">
      <div class="grid-row">
        <ul
          class="list"
          style="
              display: grid;
              grid-template-columns: 1fr 1fr;
              width: 100%;
              list-style: none;
              padding-left: 0px;
              flex-wrap: wrap;
              justify-content: space-evenly;
              gap: 3rem 2rem;
            "
          id="website-list"
        >
          {chartData.map((data, index) => (
            <WebsiteChart
              cssClass=""
              datapointA={data.datapointA}
              datapointB={data.datapointB}
              datapointC={data.datapointC}
              datapointD={data.datapointD}
              datapointE={data.datapointE}
              datapointF={data.datapointF}
              digitalBrandCategory={data.digitalBrandCategory}
              index={index}
              name={data.name}
              office={data.office}
              subOffice={data.subOffice}
              typeOfDomain={data.typeOfDomain}
            />
          ))}
        </ul>
      </div>
    </div>
  </div>

  <script>
    import List from "list.js";
    const dataAttributesList = document.querySelectorAll("#website-list h4");
    const dataPoints = [
      { num: "one", val: "data-datapointaval", max: "data-datapointamax" },
      { num: "two", val: "data-datapointbval", max: "data-datapointbmax" },
      { num: "three", val: "data-datapointcval", max: "data-datapointcmax" },
      { num: "four", val: "data-datapointdval", max: "data-datapointdmax" },
      { num: "five", val: "data-datapointeval", max: "data-datapointemax" },
      { num: "six", val: "data-datapointfval", max: "data-datapointfmax" },
    ];
    for (const item in dataAttributesList) {
      // update css vars
      if (Object.prototype.hasOwnProperty.call(dataAttributesList, item)) {
        for (const point in dataPoints) {
          const selector: HTMLElement = document.querySelector(
            `#site-${item} .${dataPoints[point].num}`
          );
          selector.style.setProperty(
            `--value`,
            dataAttributesList[item].getAttribute(dataPoints[point].val)
          );
          selector.style.setProperty(
            `--max`,
            dataAttributesList[item].getAttribute(dataPoints[point].max)
          );
          if (dataPoints[point].val === "0") {
            selector.setAttribute("class", "zeroValue");
          }
        }
      }
    }

    // this sets up search using listjs
    var options = {
      valueNames: [
        "name",
        { attr: "data-value", name: "one" },
        { attr: "data-value", name: "two" },
        { attr: "data-value", name: "three" },
        { attr: "data-value", name: "four" },
        { attr: "data-value", name: "five" },
        { attr: "data-value", name: "six" },
        { attr: "data-office", name: "office" },
        { attr: "data-subOffice", name: "subOffice" },
        { attr: "data-digitalBrandCategory", name: "digitalBrandCategory" },
        { attr: "data-typeOfDomain", name: "typeOfDomain" },
        { attr: "data-platform", name: "platform" },
      ],
    };

    new List("websites", options);
  </script>
</BaseLayout>
